var cov_1wf9oj3b57=function(){var path="/Users/Arty/Desktop/Founders&Coders/ToDoApp/logic.js",hash="750be84a39e83d7385723b0ac5bf70ec05c86ed2",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/Arty/Desktop/Founders&Coders/ToDoApp/logic.js",statementMap:{"0":{start:{line:4,column:22},end:{line:20,column:1}},"1":{start:{line:21,column:23},end:{line:21,column:25}},"2":{start:{line:22,column:21},end:{line:79,column:1}},"3":{start:{line:26,column:20},end:{line:26,column:21}},"4":{start:{line:29,column:6},end:{line:29,column:30}},"5":{start:{line:32,column:4},end:{line:32,column:28}},"6":{start:{line:38,column:4},end:{line:40,column:7}},"7":{start:{line:39,column:6},end:{line:39,column:46}},"8":{start:{line:48,column:4},end:{line:48,column:56}},"9":{start:{line:49,column:4},end:{line:49,column:47}},"10":{start:{line:50,column:4},end:{line:50,column:36}},"11":{start:{line:56,column:4},end:{line:56,column:56}},"12":{start:{line:57,column:4},end:{line:57,column:60}},"13":{start:{line:57,column:33},end:{line:57,column:57}},"14":{start:{line:64,column:4},end:{line:64,column:56}},"15":{start:{line:65,column:4},end:{line:69,column:7}},"16":{start:{line:66,column:23},end:{line:66,column:24}},"17":{start:{line:67,column:6},end:{line:67,column:54}},"18":{start:{line:67,column:27},end:{line:67,column:53}},"19":{start:{line:68,column:6},end:{line:68,column:24}},"20":{start:{line:76,column:4},end:{line:76,column:56}},"21":{start:{line:77,column:4},end:{line:77,column:34}},"22":{start:{line:86,column:0},end:{line:88,column:1}},"23":{start:{line:87,column:2},end:{line:87,column:69}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:25,column:15},end:{line:25,column:16}},loc:{start:{line:25,column:26},end:{line:33,column:3}},line:25},"1":{name:"incrementCounter",decl:{start:{line:28,column:13},end:{line:28,column:29}},loc:{start:{line:28,column:32},end:{line:30,column:5}},line:28},"2":{name:"(anonymous_2)",decl:{start:{line:37,column:23},end:{line:37,column:24}},loc:{start:{line:37,column:39},end:{line:41,column:3}},line:37},"3":{name:"(anonymous_3)",decl:{start:{line:38,column:21},end:{line:38,column:22}},loc:{start:{line:38,column:35},end:{line:40,column:5}},line:38},"4":{name:"(anonymous_4)",decl:{start:{line:43,column:11},end:{line:43,column:12}},loc:{start:{line:43,column:36},end:{line:51,column:3}},line:43},"5":{name:"(anonymous_5)",decl:{start:{line:52,column:14},end:{line:52,column:15}},loc:{start:{line:52,column:42},end:{line:58,column:3}},line:52},"6":{name:"(anonymous_6)",decl:{start:{line:57,column:27},end:{line:57,column:28}},loc:{start:{line:57,column:32},end:{line:57,column:58}},line:57},"7":{name:"(anonymous_7)",decl:{start:{line:59,column:12},end:{line:59,column:13}},loc:{start:{line:59,column:38},end:{line:70,column:3}},line:59},"8":{name:"(anonymous_8)",decl:{start:{line:65,column:24},end:{line:65,column:25}},loc:{start:{line:65,column:29},end:{line:69,column:5}},line:65},"9":{name:"(anonymous_9)",decl:{start:{line:71,column:13},end:{line:71,column:14}},loc:{start:{line:71,column:43},end:{line:78,column:3}},line:71}},branchMap:{"0":{loc:{start:{line:67,column:6},end:{line:67,column:54}},type:"if",locations:[{start:{line:67,column:6},end:{line:67,column:54}},{start:{line:67,column:6},end:{line:67,column:54}}],line:67},"1":{loc:{start:{line:86,column:0},end:{line:88,column:1}},type:"if",locations:[{start:{line:86,column:0},end:{line:88,column:1}},{start:{line:86,column:0},end:{line:88,column:1}}],line:86}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();// Part 1. Fill in any missing parts of the todoFunction object!
// you can access these on todo.todoFunctions
// For part one we expect you to use tdd
var constTodoArray=(cov_1wf9oj3b57.s[0]++,[{"id":999,"description":"This is a placeholder","done":false},{"id":747,"description":"Zis is another placeholder","done":true},{"id":911,"description":"And this is yet another placeholder","done":false}]);var placeholderTodo=(cov_1wf9oj3b57.s[1]++,{});var todoFunctions=(cov_1wf9oj3b57.s[2]++,{// todoFunctions.generateId() will give you a unique id
// You do not need to understand the implementation of this function.
generateId:function(){cov_1wf9oj3b57.f[0]++;var idCounter=(cov_1wf9oj3b57.s[3]++,0);function incrementCounter(){cov_1wf9oj3b57.f[1]++;cov_1wf9oj3b57.s[4]++;return idCounter+=1;}cov_1wf9oj3b57.s[5]++;return incrementCounter;}(),//cloneArrayOfObjects will create a copy of the todos array
//changes to the new array don't affect the original
cloneArrayOfObjects:function(todos){cov_1wf9oj3b57.f[2]++;cov_1wf9oj3b57.s[6]++;return todos.map(function(todo){cov_1wf9oj3b57.f[3]++;cov_1wf9oj3b57.s[7]++;return JSON.parse(JSON.stringify(todo));});},addTodo:function(todos,newTodo){cov_1wf9oj3b57.f[4]++;cov_1wf9oj3b57.s[8]++;// should leave the input argument todos unchanged (you can use cloneArrayOfObjects)
// returns a new array, it should contain todos with the newTodo added to the end.
// add an id to the newTodo. You can use the generateId function to create an id.
// hint: array.concat
newArray=todoFunctions.cloneArrayOfObjects(todos);cov_1wf9oj3b57.s[9]++;newTodo["id"]=todoFunctions.generateId();cov_1wf9oj3b57.s[10]++;return newArray.concat(newTodo);},deleteTodo:function(todos,idToDelete){cov_1wf9oj3b57.f[5]++;cov_1wf9oj3b57.s[11]++;// should leave the input argument todos unchanged (you can use cloneArrayOfObjects)
// return a new array, this should not contain any todo with an id of idToDelete
// hint: array.filter
newArray=todoFunctions.cloneArrayOfObjects(todos);cov_1wf9oj3b57.s[12]++;return newArray.filter(e=>{cov_1wf9oj3b57.f[6]++;cov_1wf9oj3b57.s[13]++;return e.id!=idToDelete;});},markTodo:function(todos,idToMark){cov_1wf9oj3b57.f[7]++;cov_1wf9oj3b57.s[14]++;// should leave the input argument todos unchanged (you can use cloneArrayOfObjects)
// in the new todo array, all elements will remain unchanged except the one with id: idToMark
// this element will have its done value toggled
// hint: array.map
newArray=todoFunctions.cloneArrayOfObjects(todos);cov_1wf9oj3b57.s[15]++;return newArray.map(e=>{cov_1wf9oj3b57.f[8]++;let mappedElem=(cov_1wf9oj3b57.s[16]++,e);cov_1wf9oj3b57.s[17]++;if(e.id==idToMark){cov_1wf9oj3b57.b[0][0]++;cov_1wf9oj3b57.s[18]++;mappedElem.done=!e.done;}else{cov_1wf9oj3b57.b[0][1]++;}cov_1wf9oj3b57.s[19]++;return mappedElem;});},sortTodos:function(todos,sortFunction){cov_1wf9oj3b57.f[9]++;cov_1wf9oj3b57.s[20]++;// stretch goal! Do this last
// should leave the input arguement todos unchanged (you can use cloneArrayOfObjects)
// sortFunction will have same signature as the sort function in array.sort
// hint: array.slice, array.sort
newArray=todoFunctions.cloneArrayOfObjects(todos);cov_1wf9oj3b57.s[21]++;newArray.sort(sortFunction());}});// Why is this if statement necessary?
// The answer has something to do with needing to run code both in the browser and in Node.js
// See this article for more details:
// http://www.matteoagosti.com/blog/2013/02/24/writing-javascript-modules-for-both-browser-and-node/
cov_1wf9oj3b57.s[22]++;if(typeof module!=='undefined'){cov_1wf9oj3b57.b[1][0]++;cov_1wf9oj3b57.s[23]++;module.exports={todoFunctions,constTodoArray,placeholderTodo};}else{cov_1wf9oj3b57.b[1][1]++;}