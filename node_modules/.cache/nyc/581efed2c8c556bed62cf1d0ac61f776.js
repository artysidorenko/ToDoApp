var cov_1wf9oj3b57=function(){var path="/Users/Arty/Desktop/Founders&Coders/ToDoApp/logic.js",hash="2fbebbc72c6e81dc200e06bd742af64d4a34ea1c",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/Arty/Desktop/Founders&Coders/ToDoApp/logic.js",statementMap:{"0":{start:{line:4,column:22},end:{line:4,column:44}},"1":{start:{line:6,column:21},end:{line:52,column:1}},"2":{start:{line:10,column:20},end:{line:10,column:21}},"3":{start:{line:13,column:6},end:{line:13,column:30}},"4":{start:{line:16,column:4},end:{line:16,column:28}},"5":{start:{line:22,column:4},end:{line:24,column:7}},"6":{start:{line:23,column:6},end:{line:23,column:46}},"7":{start:{line:28,column:4},end:{line:28,column:18}},"8":{start:{line:29,column:4},end:{line:29,column:20}},"9":{start:{line:59,column:0},end:{line:62,column:1}},"10":{start:{line:60,column:2},end:{line:60,column:52}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:15},end:{line:9,column:16}},loc:{start:{line:9,column:26},end:{line:17,column:3}},line:9},"1":{name:"incrementCounter",decl:{start:{line:12,column:13},end:{line:12,column:29}},loc:{start:{line:12,column:32},end:{line:14,column:5}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:21,column:23},end:{line:21,column:24}},loc:{start:{line:21,column:39},end:{line:25,column:3}},line:21},"3":{name:"(anonymous_3)",decl:{start:{line:22,column:21},end:{line:22,column:22}},loc:{start:{line:22,column:35},end:{line:24,column:5}},line:22},"4":{name:"(anonymous_4)",decl:{start:{line:27,column:11},end:{line:27,column:12}},loc:{start:{line:27,column:36},end:{line:34,column:3}},line:27},"5":{name:"(anonymous_5)",decl:{start:{line:35,column:14},end:{line:35,column:15}},loc:{start:{line:35,column:42},end:{line:39,column:3}},line:35},"6":{name:"(anonymous_6)",decl:{start:{line:40,column:12},end:{line:40,column:13}},loc:{start:{line:40,column:38},end:{line:45,column:3}},line:40},"7":{name:"(anonymous_7)",decl:{start:{line:46,column:13},end:{line:46,column:14}},loc:{start:{line:46,column:43},end:{line:51,column:3}},line:46}},branchMap:{"0":{loc:{start:{line:59,column:0},end:{line:62,column:1}},type:"if",locations:[{start:{line:59,column:0},end:{line:62,column:1}},{start:{line:59,column:0},end:{line:62,column:1}}],line:59}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();// Part 1. Fill in any missing parts of the todoFunction object!
// you can access these on todo.todoFunctions
// For part one we expect you to use tdd
var constTodoArray=(cov_1wf9oj3b57.s[0]++,["I am a placeholder"]);//var constTodo = {};
var todoFunctions=(cov_1wf9oj3b57.s[1]++,{// todoFunctions.generateId() will give you a unique id
// You do not need to understand the implementation of this function.
generateId:function(){cov_1wf9oj3b57.f[0]++;var idCounter=(cov_1wf9oj3b57.s[2]++,0);function incrementCounter(){cov_1wf9oj3b57.f[1]++;cov_1wf9oj3b57.s[3]++;return idCounter+=1;}cov_1wf9oj3b57.s[4]++;return incrementCounter;}(),//cloneArrayOfObjects will create a copy of the todos array
//changes to the new array don't affect the original
cloneArrayOfObjects:function(todos){cov_1wf9oj3b57.f[2]++;cov_1wf9oj3b57.s[5]++;return todos.map(function(todo){cov_1wf9oj3b57.f[3]++;cov_1wf9oj3b57.s[6]++;return JSON.parse(JSON.stringify(todo));});},addTodo:function(todos,newTodo){cov_1wf9oj3b57.f[4]++;cov_1wf9oj3b57.s[7]++;newArray=[];cov_1wf9oj3b57.s[8]++;return newArray;// should leave the input argument todos unchanged (you can use cloneArrayOfObjects)
// returns a new array, it should contain todos with the newTodo added to the end.
// add an id to the newTodo. You can use the generateId function to create an id.
// hint: array.concat
},deleteTodo:function(todos,idToDelete){// should leave the input argument todos unchanged (you can use cloneArrayOfObjects)
// return a new array, this should not contain any todo with an id of idToDelete
// hint: array.filter
cov_1wf9oj3b57.f[5]++;},markTodo:function(todos,idToMark){// should leave the input argument todos unchanged (you can use cloneArrayOfObjects)
// in the new todo array, all elements will remain unchanged except the one with id: idToMark
// this element will have its done value toggled
// hint: array.map
cov_1wf9oj3b57.f[6]++;},sortTodos:function(todos,sortFunction){// stretch goal! Do this last
// should leave the input arguement todos unchanged (you can use cloneArrayOfObjects)
// sortFunction will have same signature as the sort function in array.sort
// hint: array.slice, array.sort
cov_1wf9oj3b57.f[7]++;}});// Why is this if statement necessary?
// The answer has something to do with needing to run code both in the browser and in Node.js
// See this article for more details:
// http://www.matteoagosti.com/blog/2013/02/24/writing-javascript-modules-for-both-browser-and-node/
cov_1wf9oj3b57.s[9]++;if(typeof module!=='undefined'){cov_1wf9oj3b57.b[0][0]++;cov_1wf9oj3b57.s[10]++;module.exports={todoFunctions,constTodoArray// module.exports = constTodo;
};}else{cov_1wf9oj3b57.b[0][1]++;}